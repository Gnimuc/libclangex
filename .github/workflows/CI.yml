name: CI
on:
  pull_request:
  push:
    branches:
      - master
      - release-*
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - assertions=${{ matrix.assertions }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'
          - '~1.8.0-0'
          # - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest
        arch:
          - x64
        assertions:
          - false
        # include:
          # special test with LLVM assertions enabled
          # TODO: enable this across all versions
          #       (needs LLVM.jl fixes, and julia-actions/setup-julia support)
          # - os: ubuntu-latest
          #   arch: x64
          #   version: '1.7'
          #   assertions: true
          # - os: ubuntu-latest
          #   arch: x64
          #   version: '1.8'
          #   assertions: true
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        if: ${{ ! matrix.assertions }}
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Download Julia with assertions
        if: ${{ matrix.assertions }}
        env:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
        run: |
          wget https://julialangnightlies.s3.amazonaws.com/assert_bin/linux/$arch/$version/julia-latest-linux64.tar.gz
          tar -xvzf julia-latest-linux64.tar.gz
          rm -rf julia-latest-linux64.tar.gz
          echo $PWD/julia-*/bin >> $GITHUB_PATH
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - name: Build libclangex
        run: |
          julia --project=. -e 'using Pkg; Pkg.instantiate()'
          julia --project=. build_local.jl
      - name: Test ClangCompiler
        run: |
          mkdir -p testenv
          cp LocalPreferences.toml testenv/
          julia --project=testenv -e 'using Pkg;
                println("--- :julia: Instantiating project");
                Pkg.add([
                  PackageSpec(name="ClangCompiler", rev="master",
                              url="https://github.com/Gnimuc/ClangCompiler.jl.git"),
                  PackageSpec(name="libclangex_jll", rev="main")
                  ]);
                Pkg.build();
                println("+++ :julia: Running tests");
                Pkg.test("ClangCompiler"; coverage=true);'
